public class android.support.v7.internal.widget.LinearLayoutICS extends android.widget.LinearLayout
{
    private static final int SHOW_DIVIDER_BEGINNING;
    private static final int SHOW_DIVIDER_END;
    private static final int SHOW_DIVIDER_MIDDLE;
    private static final int SHOW_DIVIDER_NONE;
    private final android.graphics.drawable.Drawable mDivider;
    private final int mDividerHeight;
    private final int mDividerPadding;
    private final int mDividerWidth;
    private final int mShowDividers;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.internal.widget.LinearLayoutICS $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        boolean $z0;
        int[] $r3;
        android.content.res.TypedArray $r4;
        android.graphics.drawable.Drawable $r5;
        int $i0;

        $r0 := @this: android.support.v7.internal.widget.LinearLayoutICS;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $z0 = 1;

        specialinvoke $r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = <android.support.v7.appcompat.R$styleable: int[] LinearLayoutICS>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.graphics.drawable.Drawable mDivider> = $r5;

        $r5 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.graphics.drawable.Drawable mDivider>;

        if $r5 == null goto label3;

        $r5 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.graphics.drawable.Drawable mDivider>;

        $i0 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerWidth> = $i0;

        $r5 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.graphics.drawable.Drawable mDivider>;

        $i0 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerHeight> = $i0;

     label1:
        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(1, 0);

        $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mShowDividers> = $i0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, 0);

        $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerPadding> = $i0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r5 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.graphics.drawable.Drawable mDivider>;

        if $r5 != null goto label4;

     label2:
        virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: void setWillNotDraw(boolean)>($z0);

        return;

     label3:
        $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerWidth> = 0;

        $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerHeight> = 0;

        goto label1;

     label4:
        $z0 = 0;

        goto label2;
    }

    void drawSupportDividersHorizontal(android.graphics.Canvas)
    {
        android.support.v7.internal.widget.LinearLayoutICS $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r3;
        android.widget.LinearLayout$LayoutParams $r4;

        $r0 := @this: android.support.v7.internal.widget.LinearLayoutICS;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.view.View getChildAt(int)>($i1);

        if $r2 == null goto label2;

        $i2 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i2 == 8 goto label2;

        $z0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: boolean hasSupportDividerBeforeChildAt(int)>($i1);

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i2 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $i3 = $r4.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i2 = $i2 - $i3;

        virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: void drawSupportVerticalDivider(android.graphics.Canvas,int)>($r1, $i2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $z0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: boolean hasSupportDividerBeforeChildAt(int)>($i0);

        if $z0 == 0 goto label6;

        $i0 = $i0 + -1;

        $r2 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.view.View getChildAt(int)>($i0);

        if $r2 != null goto label5;

        $i0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $i1 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerWidth>;

        $i0 = $i0 - $i1;

     label4:
        virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: void drawSupportVerticalDivider(android.graphics.Canvas,int)>($r1, $i0);

        return;

     label5:
        $i0 = virtualinvoke $r2.<android.view.View: int getRight()>();

        goto label4;

     label6:
        return;
    }

    void drawSupportDividersVertical(android.graphics.Canvas)
    {
        android.support.v7.internal.widget.LinearLayoutICS $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r3;
        android.widget.LinearLayout$LayoutParams $r4;

        $r0 := @this: android.support.v7.internal.widget.LinearLayoutICS;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.view.View getChildAt(int)>($i1);

        if $r2 == null goto label2;

        $i2 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i2 == 8 goto label2;

        $z0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: boolean hasSupportDividerBeforeChildAt(int)>($i1);

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i2 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i3 = $r4.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i2 = $i2 - $i3;

        virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: void drawSupportHorizontalDivider(android.graphics.Canvas,int)>($r1, $i2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $z0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: boolean hasSupportDividerBeforeChildAt(int)>($i0);

        if $z0 == 0 goto label6;

        $i0 = $i0 + -1;

        $r2 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.view.View getChildAt(int)>($i0);

        if $r2 != null goto label5;

        $i0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getHeight()>();

        $i1 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        $i1 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerHeight>;

        $i0 = $i0 - $i1;

     label4:
        virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: void drawSupportHorizontalDivider(android.graphics.Canvas,int)>($r1, $i0);

        return;

     label5:
        $i0 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        goto label4;

     label6:
        return;
    }

    void drawSupportHorizontalDivider(android.graphics.Canvas, int)
    {
        android.support.v7.internal.widget.LinearLayoutICS $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v7.internal.widget.LinearLayoutICS;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getPaddingLeft()>();

        $i2 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerPadding>;

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getWidth()>();

        $i3 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getPaddingRight()>();

        $i2 = $i2 - $i3;

        $i3 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerPadding>;

        $i2 = $i2 - $i3;

        $i3 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerHeight>;

        $i3 = $i3 + $i0;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i1, $i0, $i2, $i3);

        $r2 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    void drawSupportVerticalDivider(android.graphics.Canvas, int)
    {
        android.support.v7.internal.widget.LinearLayoutICS $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v7.internal.widget.LinearLayoutICS;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $r2 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getPaddingTop()>();

        $i2 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerPadding>;

        $i1 = $i1 + $i2;

        $i2 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerWidth>;

        $i2 = $i2 + $i0;

        $i3 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getHeight()>();

        $i4 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getPaddingBottom()>();

        $i3 = $i3 - $i4;

        $i4 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerPadding>;

        $i3 = $i3 - $i4;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r2 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    public int getSupportDividerWidth()
    {
        android.support.v7.internal.widget.LinearLayoutICS $r0;
        int i0;

        $r0 := @this: android.support.v7.internal.widget.LinearLayoutICS;

        i0 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerWidth>;

        return i0;
    }

    protected boolean hasSupportDividerBeforeChildAt(int)
    {
        android.support.v7.internal.widget.LinearLayoutICS $r0;
        int $i0, $i1;
        boolean $z0;
        android.view.View $r1;

        $r0 := @this: android.support.v7.internal.widget.LinearLayoutICS;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label2;

        $i0 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mShowDividers>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $i1 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getChildCount()>();

        if $i0 != $i1 goto label3;

        $i0 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mShowDividers>;

        $i0 = $i0 & 4;

        if $i0 != 0 goto label8;

        return 0;

     label3:
        $i1 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mShowDividers>;

        $i1 = $i1 & 2;

        if $i1 == 0 goto label7;

        $z0 = 0;

        $i0 = $i0 + -1;

     label4:
        if $i0 < 0 goto label5;

        $r1 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.view.View getChildAt(int)>($i0);

        $i1 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i1 == 8 goto label6;

        $z0 = 1;

     label5:
        return $z0;

     label6:
        $i0 = $i0 + -1;

        goto label4;

     label7:
        return 0;

     label8:
        return 1;
    }

    protected void measureChildWithMargins(android.view.View, int, int, int, int)
    {
        android.support.v7.internal.widget.LinearLayoutICS $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.drawable.Drawable $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.widget.LinearLayout$LayoutParams $r4;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.widget.LinearLayoutICS;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.graphics.drawable.Drawable mDivider>;

        if $r2 == null goto label1;

        $i4 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int indexOfChild(android.view.View)>($r1);

        $i5 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getChildCount()>();

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i6 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getOrientation()>();

        if $i6 != 1 goto label3;

        $z0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: boolean hasSupportDividerBeforeChildAt(int)>($i4);

        if $z0 == 0 goto label2;

        $i4 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerHeight>;

        $r4.<android.widget.LinearLayout$LayoutParams: int topMargin> = $i4;

     label1:
        specialinvoke $r0.<android.widget.LinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

        return;

     label2:
        $i6 = $i5 + -1;

        if $i4 != $i6 goto label1;

        $z0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: boolean hasSupportDividerBeforeChildAt(int)>($i5);

        if $z0 == 0 goto label1;

        $i4 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerHeight>;

        $r4.<android.widget.LinearLayout$LayoutParams: int bottomMargin> = $i4;

        goto label1;

     label3:
        $z0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: boolean hasSupportDividerBeforeChildAt(int)>($i4);

        if $z0 == 0 goto label4;

        $i4 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerWidth>;

        $r4.<android.widget.LinearLayout$LayoutParams: int leftMargin> = $i4;

        goto label1;

     label4:
        $i6 = $i5 + -1;

        if $i4 != $i6 goto label1;

        $z0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: boolean hasSupportDividerBeforeChildAt(int)>($i5);

        if $z0 == 0 goto label1;

        $i4 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: int mDividerWidth>;

        $r4.<android.widget.LinearLayout$LayoutParams: int rightMargin> = $i4;

        goto label1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.support.v7.internal.widget.LinearLayoutICS $r0;
        android.graphics.Canvas $r1;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v7.internal.widget.LinearLayoutICS;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = $r0.<android.support.v7.internal.widget.LinearLayoutICS: android.graphics.drawable.Drawable mDivider>;

        if $r2 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: int getOrientation()>();

        if $i0 != 1 goto label2;

        virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: void drawSupportDividersVertical(android.graphics.Canvas)>($r1);

        return;

     label2:
        virtualinvoke $r0.<android.support.v7.internal.widget.LinearLayoutICS: void drawSupportDividersHorizontal(android.graphics.Canvas)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <android.support.v7.internal.widget.LinearLayoutICS: int SHOW_DIVIDER_MIDDLE> = 2;

        <android.support.v7.internal.widget.LinearLayoutICS: int SHOW_DIVIDER_END> = 4;

        <android.support.v7.internal.widget.LinearLayoutICS: int SHOW_DIVIDER_BEGINNING> = 1;

        return;
    }
}
