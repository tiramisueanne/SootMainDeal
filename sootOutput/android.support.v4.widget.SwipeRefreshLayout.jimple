public class android.support.v4.widget.SwipeRefreshLayout extends android.view.ViewGroup
{
    private static final float ACCELERATE_INTERPOLATION_FACTOR;
    private static final float DECELERATE_INTERPOLATION_FACTOR;
    private static final int INVALID_POINTER;
    private static final int[] LAYOUT_ATTRS;
    private static final java.lang.String LOG_TAG;
    private static final float MAX_SWIPE_DISTANCE_FACTOR;
    private static final float PROGRESS_BAR_HEIGHT;
    private static final int REFRESH_TRIGGER_DISTANCE;
    private static final long RETURN_TO_ORIGINAL_POSITION_TIMEOUT;
    private final android.view.animation.AccelerateInterpolator mAccelerateInterpolator;
    private int mActivePointerId;
    private final android.view.animation.Animation mAnimateToStartPosition;
    private final java.lang.Runnable mCancel;
    private float mCurrPercentage;
    private int mCurrentTargetOffsetTop;
    private final android.view.animation.DecelerateInterpolator mDecelerateInterpolator;
    private float mDistanceToTriggerSync;
    private int mFrom;
    private float mFromPercentage;
    private float mInitialMotionY;
    private boolean mIsBeingDragged;
    private float mLastMotionY;
    private android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener;
    private int mMediumAnimationDuration;
    private int mOriginalOffsetTop;
    private android.support.v4.widget.SwipeProgressBar mProgressBar;
    private int mProgressBarHeight;
    private boolean mRefreshing;
    private final java.lang.Runnable mReturnToStartPosition;
    private final android.view.animation.Animation$AnimationListener mReturnToStartPositionListener;
    private boolean mReturningToStart;
    private final android.view.animation.Animation$AnimationListener mShrinkAnimationListener;
    private android.view.animation.Animation mShrinkTrigger;
    private android.view.View mTarget;
    private int mTouchSlop;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        int[] $r2;

        <android.support.v4.widget.SwipeRefreshLayout: long RETURN_TO_ORIGINAL_POSITION_TIMEOUT> = 300L;

        <android.support.v4.widget.SwipeRefreshLayout: int REFRESH_TRIGGER_DISTANCE> = 120;

        <android.support.v4.widget.SwipeRefreshLayout: float PROGRESS_BAR_HEIGHT> = 4.0F;

        <android.support.v4.widget.SwipeRefreshLayout: float MAX_SWIPE_DISTANCE_FACTOR> = 0.6F;

        <android.support.v4.widget.SwipeRefreshLayout: int INVALID_POINTER> = -1;

        <android.support.v4.widget.SwipeRefreshLayout: float DECELERATE_INTERPOLATION_FACTOR> = 2.0F;

        <android.support.v4.widget.SwipeRefreshLayout: float ACCELERATE_INTERPOLATION_FACTOR> = 1.5F;

        $r1 = class "android/support/v4/widget/SwipeRefreshLayout";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.support.v4.widget.SwipeRefreshLayout: java.lang.String LOG_TAG> = $r0;

        $r2 = newarray (int)[1];

        $r2[0] = 16842766;

        <android.support.v4.widget.SwipeRefreshLayout: int[] LAYOUT_ATTRS> = $r2;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.content.Context $r1;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.support.v4.widget.SwipeRefreshLayout$1 $r3;
        android.support.v4.widget.SwipeRefreshLayout$2 $r4;
        android.support.v4.widget.SwipeRefreshLayout$3 $r5;
        android.support.v4.widget.SwipeRefreshLayout$4 $r6;
        android.support.v4.widget.SwipeRefreshLayout$5 $r7;
        android.support.v4.widget.SwipeRefreshLayout$6 $r8;
        android.view.ViewConfiguration $r9;
        int $i0;
        android.content.res.Resources $r10;
        android.support.v4.widget.SwipeProgressBar $r11;
        android.util.DisplayMetrics $r12;
        float $f0;
        android.view.animation.DecelerateInterpolator $r13;
        android.view.animation.AccelerateInterpolator $r14;
        int[] $r15;
        android.content.res.TypedArray $r16;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing> = 0;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mDistanceToTriggerSync> = -1.0F;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mFromPercentage> = 0.0F;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mCurrPercentage> = 0.0F;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = -1;

        $r3 = new android.support.v4.widget.SwipeRefreshLayout$1;

        specialinvoke $r3.<android.support.v4.widget.SwipeRefreshLayout$1: void <init>(android.support.v4.widget.SwipeRefreshLayout)>($r0);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition> = $r3;

        $r4 = new android.support.v4.widget.SwipeRefreshLayout$2;

        specialinvoke $r4.<android.support.v4.widget.SwipeRefreshLayout$2: void <init>(android.support.v4.widget.SwipeRefreshLayout)>($r0);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mShrinkTrigger> = $r4;

        $r5 = new android.support.v4.widget.SwipeRefreshLayout$3;

        specialinvoke $r5.<android.support.v4.widget.SwipeRefreshLayout$3: void <init>(android.support.v4.widget.SwipeRefreshLayout)>($r0);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mReturnToStartPositionListener> = $r5;

        $r6 = new android.support.v4.widget.SwipeRefreshLayout$4;

        specialinvoke $r6.<android.support.v4.widget.SwipeRefreshLayout$4: void <init>(android.support.v4.widget.SwipeRefreshLayout)>($r0);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mShrinkAnimationListener> = $r6;

        $r7 = new android.support.v4.widget.SwipeRefreshLayout$5;

        specialinvoke $r7.<android.support.v4.widget.SwipeRefreshLayout$5: void <init>(android.support.v4.widget.SwipeRefreshLayout)>($r0);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: java.lang.Runnable mReturnToStartPosition> = $r7;

        $r8 = new android.support.v4.widget.SwipeRefreshLayout$6;

        specialinvoke $r8.<android.support.v4.widget.SwipeRefreshLayout$6: void <init>(android.support.v4.widget.SwipeRefreshLayout)>($r0);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: java.lang.Runnable mCancel> = $r8;

        $r9 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i0 = virtualinvoke $r9.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mTouchSlop> = $i0;

        $r10 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r10.<android.content.res.Resources: int getInteger(int)>(17694721);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mMediumAnimationDuration> = $i0;

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void setWillNotDraw(boolean)>(0);

        $r11 = new android.support.v4.widget.SwipeProgressBar;

        specialinvoke $r11.<android.support.v4.widget.SwipeProgressBar: void <init>(android.view.View)>($r0);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeProgressBar mProgressBar> = $r11;

        $r10 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r10.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r12.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 * 4.0F;

        $i0 = (int) $f0;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mProgressBarHeight> = $i0;

        $r13 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r13.<android.view.animation.DecelerateInterpolator: void <init>(float)>(2.0F);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.DecelerateInterpolator mDecelerateInterpolator> = $r13;

        $r14 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r14.<android.view.animation.AccelerateInterpolator: void <init>(float)>(1.5F);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.AccelerateInterpolator mAccelerateInterpolator> = $r14;

        $r15 = <android.support.v4.widget.SwipeRefreshLayout: int[] LAYOUT_ATTRS>;

        $r16 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r15);

        $z0 = virtualinvoke $r16.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void setEnabled(boolean)>($z0);

        virtualinvoke $r16.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    static int access$000(android.support.v4.widget.SwipeRefreshLayout)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        i0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mFrom>;

        return i0;
    }

    static int access$100(android.support.v4.widget.SwipeRefreshLayout)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        i0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mOriginalOffsetTop>;

        return i0;
    }

    static android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.view.animation.Animation$AnimationListener r1;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mReturnToStartPositionListener>;

        return r1;
    }

    static void access$1100(android.support.v4.widget.SwipeRefreshLayout, int, android.view.animation.Animation$AnimationListener)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int $i0;
        android.view.animation.Animation$AnimationListener $r1;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.view.animation.Animation$AnimationListener;

        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener)>($i0, $r1);

        return;
    }

    static int access$1200(android.support.v4.widget.SwipeRefreshLayout)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        i0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mMediumAnimationDuration>;

        return i0;
    }

    static android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.view.animation.Animation r1;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mShrinkTrigger>;

        return r1;
    }

    static android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.view.animation.Animation$AnimationListener r1;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mShrinkAnimationListener>;

        return r1;
    }

    static android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.view.animation.DecelerateInterpolator r1;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.DecelerateInterpolator mDecelerateInterpolator>;

        return r1;
    }

    static android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.view.View r1;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        return r1;
    }

    static void access$300(android.support.v4.widget.SwipeRefreshLayout, int)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int $i0;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)>($i0);

        return;
    }

    static float access$400(android.support.v4.widget.SwipeRefreshLayout)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        float f0;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        f0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: float mFromPercentage>;

        return f0;
    }

    static float access$402(android.support.v4.widget.SwipeRefreshLayout, float)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        float $f0;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        $f0 := @parameter1: float;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mFromPercentage> = $f0;

        return $f0;
    }

    static android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.support.v4.widget.SwipeProgressBar r1;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeProgressBar mProgressBar>;

        return r1;
    }

    static int access$700(android.support.v4.widget.SwipeRefreshLayout)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int i0;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        i0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop>;

        return i0;
    }

    static int access$702(android.support.v4.widget.SwipeRefreshLayout, int)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int $i0;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        $i0 := @parameter1: int;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop> = $i0;

        return $i0;
    }

    static float access$800(android.support.v4.widget.SwipeRefreshLayout)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        float f0;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        f0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: float mCurrPercentage>;

        return f0;
    }

    static float access$802(android.support.v4.widget.SwipeRefreshLayout, float)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        float $f0;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        $f0 := @parameter1: float;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mCurrPercentage> = $f0;

        return $f0;
    }

    static boolean access$902(android.support.v4.widget.SwipeRefreshLayout, boolean)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v4.widget.SwipeRefreshLayout;

        $z0 := @parameter1: boolean;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart> = $z0;

        return $z0;
    }

    private void animateOffsetToStartPosition(int, android.view.animation.Animation$AnimationListener)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int $i0;
        android.view.animation.Animation$AnimationListener $r1;
        android.view.animation.Animation $r2;
        long $l1;
        android.view.animation.DecelerateInterpolator $r3;
        android.view.View $r4;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.animation.Animation$AnimationListener;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mFrom> = $i0;

        $r2 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition>;

        virtualinvoke $r2.<android.view.animation.Animation: void reset()>();

        $r2 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition>;

        $i0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mMediumAnimationDuration>;

        $l1 = (long) $i0;

        virtualinvoke $r2.<android.view.animation.Animation: void setDuration(long)>($l1);

        $r2 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition>;

        virtualinvoke $r2.<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($r1);

        $r2 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition>;

        $r3 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.DecelerateInterpolator mDecelerateInterpolator>;

        virtualinvoke $r2.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r3);

        $r4 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $r2 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition>;

        virtualinvoke $r4.<android.view.View: void startAnimation(android.view.animation.Animation)>($r2);

        return;
    }

    private void ensureTarget()
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        float $f0, $f1;
        android.view.View $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        byte $b2;
        android.view.ViewParent $r3;
        android.content.res.Resources $r4;
        android.util.DisplayMetrics $r5;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        if $r1 != null goto label2;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getChildCount()>();

        if $i0 <= 1 goto label1;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean isInEditMode()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("SwipeRefreshLayout can host only one direct child");

        throw $r2;

     label1:
        $r1 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View getChildAt(int)>(0);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget> = $r1;

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingTop()>();

        $i0 = $i0 + $i1;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mOriginalOffsetTop> = $i0;

     label2:
        $f1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: float mDistanceToTriggerSync>;

        $b2 = $f1 cmpl -1.0F;

        if $b2 != 0 goto label3;

        $r3 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.ViewParent getParent()>();

        if $r3 == null goto label3;

        $r3 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.ViewParent getParent()>();

        $r1 = (android.view.View) $r3;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        if $i0 <= 0 goto label3;

        $r4 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r3 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.ViewParent getParent()>();

        $r1 = (android.view.View) $r3;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $f1 = (float) $i0;

        $f1 = $f1 * 0.6F;

        $f0 = $r5.<android.util.DisplayMetrics: float density>;

        $f0 = 120.0F * $f0;

        $f1 = staticinvoke <java.lang.Math: float min(float,float)>($f1, $f0);

        $i0 = (int) $f1;

        $f1 = (float) $i0;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mDistanceToTriggerSync> = $f1;

     label3:
        return;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        byte $b3;
        float $f0;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i0);

        $i2 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId>;

        if $i1 != $i2 goto label3;

        if $i0 != 0 goto label2;

        $b3 = 1;

     label1:
        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $b3);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mLastMotionY> = $f0;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $b3);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = $i0;

        return;

     label2:
        $b3 = 0;

        goto label1;

     label3:
        return;
    }

    private void setTargetOffsetTopAndBottom(int)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int $i0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        virtualinvoke $r1.<android.view.View: void offsetTopAndBottom(int)>($i0);

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop> = $i0;

        return;
    }

    private void setTriggerPercentage(float)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        float $f0;
        byte $b0;
        android.support.v4.widget.SwipeProgressBar $r1;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mCurrPercentage> = 0.0F;

        return;

     label1:
        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mCurrPercentage> = $f0;

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeProgressBar mProgressBar>;

        virtualinvoke $r1.<android.support.v4.widget.SwipeProgressBar: void setTriggerPercentage(float)>($f0);

        return;
    }

    private void startRefresh()
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        java.lang.Runnable $r1;
        android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener $r2;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: java.lang.Runnable mCancel>;

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: java.lang.Runnable mReturnToStartPosition>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void setRefreshing(boolean)>(1);

        $r2 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener>;

        interfaceinvoke $r2.<android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener: void onRefresh()>();

        return;
    }

    private void updateContentOffsetTop(int)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        float $f0, $f1;
        int $i0, $i1;
        android.view.View $r1;
        byte $b2;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $i1 := @parameter0: int;

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $f1 = (float) $i1;

        $f0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: float mDistanceToTriggerSync>;

        $b2 = $f1 cmpl $f0;

        if $b2 <= 0 goto label2;

        $f0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: float mDistanceToTriggerSync>;

        $i1 = (int) $f0;

     label1:
        $i1 = $i1 - $i0;

        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)>($i1);

        return;

     label2:
        if $i1 >= 0 goto label1;

        $i1 = 0;

        goto label1;
    }

    private void updatePositionTimeout()
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        java.lang.Runnable $r1;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: java.lang.Runnable mCancel>;

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: java.lang.Runnable mCancel>;

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean postDelayed(java.lang.Runnable,long)>($r1, 300L);

        return;
    }

    public boolean canChildScrollUp()
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int $i0, $i1;
        android.view.View $r1;
        boolean $z0;
        android.widget.AbsListView $r2;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 14 goto label3;

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $z0 = $r1 instanceof android.widget.AbsListView;

        if $z0 == 0 goto label2;

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $r2 = (android.widget.AbsListView) $r1;

        $i0 = virtualinvoke $r2.<android.widget.AbsListView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $i0 = virtualinvoke $r2.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        if $i0 > 0 goto label4;

        $r1 = virtualinvoke $r2.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = virtualinvoke $r2.<android.widget.AbsListView: int getPaddingTop()>();

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $i0 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        if $i0 > 0 goto label4;

        return 0;

     label3:
        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>($r1, -1);

        return $z0;

     label4:
        return 1;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.graphics.Canvas $r1;
        android.support.v4.widget.SwipeProgressBar $r2;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>($r1);

        $r2 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeProgressBar mProgressBar>;

        virtualinvoke $r2.<android.support.v4.widget.SwipeProgressBar: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    public boolean isRefreshing()
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        boolean z0;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        z0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing>;

        return z0;
    }

    public void onAttachedToWindow()
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        java.lang.Runnable $r1;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        specialinvoke $r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: java.lang.Runnable mCancel>;

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: java.lang.Runnable mReturnToStartPosition>;

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }

    public void onDetachedFromWindow()
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        java.lang.Runnable $r1;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        specialinvoke $r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: java.lang.Runnable mReturnToStartPosition>;

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: java.lang.Runnable mCancel>;

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.view.MotionEvent $r1;
        float $f0, $f1, $f2;
        int $i0;
        boolean $z0;
        java.lang.String $r2;
        byte $b1;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 := @parameter0: android.view.MotionEvent;

        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void ensureTarget()>();

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);

        $z0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart>;

        if $z0 == 0 goto label01;

        if $i0 != 0 goto label01;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart> = 0;

     label01:
        $z0 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean isEnabled()>();

        if $z0 == 0 goto label10;

        $z0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart>;

        if $z0 != 0 goto label10;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean canChildScrollUp()>();

        if $z0 == 0 goto label02;

        return 0;

     label02:
        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label09;
            case 2: goto label05;
            case 3: goto label09;
            case 4: goto label03;
            case 5: goto label03;
            case 6: goto label08;
            default: goto label03;
        };

     label03:
        $z0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged>;

        return $z0;

     label04:
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mInitialMotionY> = $f1;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mLastMotionY> = $f1;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = $i0;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged> = 0;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mCurrPercentage> = 0.0F;

        goto label03;

     label05:
        $i0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId>;

        if $i0 != -1 goto label06;

        $r2 = <android.support.v4.widget.SwipeRefreshLayout: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Got ACTION_MOVE event but don\'t have an active pointer id.");

        return 0;

     label06:
        $i0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId>;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i0);

        if $i0 >= 0 goto label07;

        $r2 = <android.support.v4.widget.SwipeRefreshLayout: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Got ACTION_MOVE event but have an invalid active pointer id.");

        return 0;

     label07:
        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i0);

        $f0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: float mInitialMotionY>;

        $f0 = $f1 - $f0;

        $i0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mTouchSlop>;

        $f2 = (float) $i0;

        $b1 = $f0 cmpl $f2;

        if $b1 <= 0 goto label03;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mLastMotionY> = $f1;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged> = 1;

        goto label03;

     label08:
        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void onSecondaryPointerUp(android.view.MotionEvent)>($r1);

        goto label03;

     label09:
        $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged> = 0;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mCurrPercentage> = 0.0F;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = -1;

        goto label03;

     label10:
        return 0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        android.support.v4.widget.SwipeProgressBar $r1;
        android.view.View $r2;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getMeasuredWidth()>();

        $i2 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getMeasuredHeight()>();

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeProgressBar mProgressBar>;

        $i0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mProgressBarHeight>;

        virtualinvoke $r1.<android.support.v4.widget.SwipeProgressBar: void setBounds(int,int,int,int)>(0, 0, $i3, $i0);

        $i0 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getChildCount()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingLeft()>();

        $i1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop>;

        $i4 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingTop()>();

        $i1 = $i1 + $i4;

        $i4 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingLeft()>();

        $i3 = $i3 - $i4;

        $i4 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingRight()>();

        $i3 = $i3 - $i4;

        $i4 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingTop()>();

        $i2 = $i2 - $i4;

        $i4 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingBottom()>();

        $i2 = $i2 - $i4;

        $i3 = $i0 + $i3;

        $i2 = $i1 + $i2;

        virtualinvoke $r2.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i3, $i2);

        return;
    }

    public void onMeasure(int, int)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.view.View $r2;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.view.ViewGroup: void onMeasure(int,int)>($i0, $i1);

        $i0 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getChildCount()>();

        if $i0 <= 1 goto label1;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean isInEditMode()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("SwipeRefreshLayout can host only one direct child");

        throw $r1;

     label1:
        $i0 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getChildCount()>();

        if $i0 <= 0 goto label2;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getMeasuredWidth()>();

        $i1 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, 1073741824);

        $i1 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getMeasuredHeight()>();

        $i2 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 1073741824);

        virtualinvoke $r2.<android.view.View: void measure(int,int)>($i0, $i1);

     label2:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.view.MotionEvent $r1;
        float $f0, $f1, $f2;
        int $i0, $i2;
        boolean $z0;
        java.lang.String $r2;
        byte $b1;
        android.view.animation.AccelerateInterpolator $r3;
        android.view.View $r4;
        java.lang.Runnable $r5;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);

        $z0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart>;

        if $z0 == 0 goto label01;

        if $i0 != 0 goto label01;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart> = 0;

     label01:
        $z0 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean isEnabled()>();

        if $z0 == 0 goto label14;

        $z0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mReturningToStart>;

        if $z0 != 0 goto label14;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean canChildScrollUp()>();

        if $z0 == 0 goto label02;

        return 0;

     label02:
        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label13;
            case 2: goto label05;
            case 3: goto label13;
            case 4: goto label03;
            case 5: goto label11;
            case 6: goto label12;
            default: goto label03;
        };

     label03:
        return 1;

     label04:
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mInitialMotionY> = $f1;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mLastMotionY> = $f1;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = $i0;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged> = 0;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mCurrPercentage> = 0.0F;

        goto label03;

     label05:
        $i0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId>;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i0);

        if $i0 >= 0 goto label06;

        $r2 = <android.support.v4.widget.SwipeRefreshLayout: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Got ACTION_MOVE event but have an invalid active pointer id.");

        return 0;

     label06:
        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i0);

        $f0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: float mInitialMotionY>;

        $f0 = $f1 - $f0;

        $z0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged>;

        if $z0 != 0 goto label07;

        $i0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: int mTouchSlop>;

        $f2 = (float) $i0;

        $b1 = $f0 cmpl $f2;

        if $b1 <= 0 goto label07;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged> = 1;

     label07:
        $z0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged>;

        if $z0 == 0 goto label03;

        $f2 = $r0.<android.support.v4.widget.SwipeRefreshLayout: float mDistanceToTriggerSync>;

        $b1 = $f0 cmpl $f2;

        if $b1 <= 0 goto label09;

        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void startRefresh()>();

     label08:
        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mLastMotionY> = $f1;

        goto label03;

     label09:
        $r3 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.animation.AccelerateInterpolator mAccelerateInterpolator>;

        $f2 = $r0.<android.support.v4.widget.SwipeRefreshLayout: float mDistanceToTriggerSync>;

        $f2 = $f0 / $f2;

        $f2 = virtualinvoke $r3.<android.view.animation.AccelerateInterpolator: float getInterpolation(float)>($f2);

        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void setTriggerPercentage(float)>($f2);

        $i0 = (int) $f0;

        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void updateContentOffsetTop(int)>($i0);

        $f0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: float mLastMotionY>;

        $b1 = $f0 cmpl $f1;

        if $b1 <= 0 goto label10;

        $r4 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.view.View mTarget>;

        $i0 = virtualinvoke $r4.<android.view.View: int getTop()>();

        $i2 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: int getPaddingTop()>();

        if $i0 != $i2 goto label10;

        $r5 = $r0.<android.support.v4.widget.SwipeRefreshLayout: java.lang.Runnable mCancel>;

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean removeCallbacks(java.lang.Runnable)>($r5);

        goto label08;

     label10:
        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void updatePositionTimeout()>();

        goto label08;

     label11:
        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i0);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mLastMotionY> = $f1;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i0);

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = $i0;

        goto label03;

     label12:
        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void onSecondaryPointerUp(android.view.MotionEvent)>($r1);

        goto label03;

     label13:
        $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mIsBeingDragged> = 0;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mCurrPercentage> = 0.0F;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: int mActivePointerId> = -1;

     label14:
        return 0;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $z0 := @parameter0: boolean;

        return;
    }

    public void setColorScheme(int, int, int, int)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void setColorSchemeResources(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public void setColorSchemeColors(int, int, int, int)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int $i0, $i1, $i2, $i3;
        android.support.v4.widget.SwipeProgressBar $r1;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void ensureTarget()>();

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeProgressBar mProgressBar>;

        virtualinvoke $r1.<android.support.v4.widget.SwipeProgressBar: void setColorScheme(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public void setColorSchemeResources(int, int, int, int)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        int $i0, $i1, $i2, $i3;
        android.content.res.Resources $r1;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int)>($i0);

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int)>($i1);

        $i2 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int)>($i2);

        $i3 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int)>($i3);

        virtualinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void setColorSchemeColors(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener $r1;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $r1 := @parameter0: android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener> = $r1;

        return;
    }

    public void setRefreshing(boolean)
    {
        android.support.v4.widget.SwipeRefreshLayout $r0;
        boolean $z0, $z1;
        android.support.v4.widget.SwipeProgressBar $r1;

        $r0 := @this: android.support.v4.widget.SwipeRefreshLayout;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing>;

        if $z1 == $z0 goto label2;

        specialinvoke $r0.<android.support.v4.widget.SwipeRefreshLayout: void ensureTarget()>();

        $r0.<android.support.v4.widget.SwipeRefreshLayout: float mCurrPercentage> = 0.0F;

        $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing> = $z0;

        $z0 = $r0.<android.support.v4.widget.SwipeRefreshLayout: boolean mRefreshing>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeProgressBar mProgressBar>;

        virtualinvoke $r1.<android.support.v4.widget.SwipeProgressBar: void start()>();

        return;

     label1:
        $r1 = $r0.<android.support.v4.widget.SwipeRefreshLayout: android.support.v4.widget.SwipeProgressBar mProgressBar>;

        virtualinvoke $r1.<android.support.v4.widget.SwipeProgressBar: void stop()>();

     label2:
        return;
    }
}
