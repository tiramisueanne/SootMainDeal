class android.support.v4.text.ICUCompatIcs extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static java.lang.reflect.Method sAddLikelySubtagsMethod;
    private static java.lang.reflect.Method sGetScriptMethod;

    static void <clinit>()
    {
        java.lang.Exception $r0;
        java.lang.Class $r1;
        java.lang.Class[] $r2;
        java.lang.reflect.Method $r3;

        <android.support.v4.text.ICUCompatIcs: java.lang.String TAG> = "ICUCompatIcs";

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("libcore.icu.ICU");

     label2:
        if $r1 == null goto label8;

     label3:
        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "java/lang/String";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getScript", $r2);

     label4:
        <android.support.v4.text.ICUCompatIcs: java.lang.reflect.Method sGetScriptMethod> = $r3;

     label5:
        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "java/lang/String";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addLikelySubtags", $r2);

     label6:
        <android.support.v4.text.ICUCompatIcs: java.lang.reflect.Method sAddLikelySubtagsMethod> = $r3;

        return;

     label7:
        $r0 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ICUCompatIcs", $r0);

     label8:
        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    void <init>()
    {
        android.support.v4.text.ICUCompatIcs $r0;

        $r0 := @this: android.support.v4.text.ICUCompatIcs;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String addLikelySubtags(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.lang.reflect.Method $r3;
        java.lang.IllegalAccessException $r4;
        java.lang.reflect.InvocationTargetException $r5;

        $r0 := @parameter0: java.lang.String;

        $r3 = <android.support.v4.text.ICUCompatIcs: java.lang.reflect.Method sAddLikelySubtagsMethod>;

        if $r3 == null goto label4;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r0;

        $r3 = <android.support.v4.text.ICUCompatIcs: java.lang.reflect.Method sAddLikelySubtagsMethod>;

     label1:
        $r2 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

     label2:
        $r0 = (java.lang.String) $r2;

        return $r0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ICUCompatIcs", $r4);

     label4:
        return $r0;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ICUCompatIcs", $r5);

        goto label4;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    public static java.lang.String getScript(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.lang.reflect.Method $r3;
        java.lang.IllegalAccessException $r4;
        java.lang.reflect.InvocationTargetException $r5;

        $r0 := @parameter0: java.lang.String;

        $r3 = <android.support.v4.text.ICUCompatIcs: java.lang.reflect.Method sGetScriptMethod>;

        if $r3 == null goto label4;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r0;

        $r3 = <android.support.v4.text.ICUCompatIcs: java.lang.reflect.Method sGetScriptMethod>;

     label1:
        $r2 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

     label2:
        $r0 = (java.lang.String) $r2;

        return $r0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ICUCompatIcs", $r4);

     label4:
        return null;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ICUCompatIcs", $r5);

        goto label4;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }
}
