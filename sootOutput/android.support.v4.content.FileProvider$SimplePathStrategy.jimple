class android.support.v4.content.FileProvider$SimplePathStrategy extends java.lang.Object implements android.support.v4.content.FileProvider$PathStrategy
{
    private final java.lang.String mAuthority;
    private final java.util.HashMap mRoots;

    public void <init>(java.lang.String)
    {
        android.support.v4.content.FileProvider$SimplePathStrategy $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;

        $r0 := @this: android.support.v4.content.FileProvider$SimplePathStrategy;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots> = $r2;

        $r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.lang.String mAuthority> = $r1;

        return;
    }

    public void addRoot(java.lang.String, java.io.File)
    {
        android.support.v4.content.FileProvider$SimplePathStrategy $r0;
        java.lang.String $r1;
        java.io.IOException $r2;
        java.io.File $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.util.HashMap $r5;
        java.lang.StringBuilder $r6;

        $r0 := @this: android.support.v4.content.FileProvider$SimplePathStrategy;

        $r1 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.io.File;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name must not be empty");

        throw $r4;

     label1:
        $r3 = virtualinvoke $r3.<java.io.File: java.io.File getCanonicalFile()>();

     label2:
        $r5 = $r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve canonical path for ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r2);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.io.File getFileForUri(android.net.Uri)
    {
        android.support.v4.content.FileProvider$SimplePathStrategy $r0;
        android.net.Uri $r1;
        java.io.IOException $r2;
        java.lang.String $r3, $r4;
        int $i0;
        java.util.HashMap $r5;
        java.lang.Object $r6;
        java.io.File $r7, $r10;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9;
        boolean $z0;
        java.lang.SecurityException $r11;

        $r0 := @this: android.support.v4.content.FileProvider$SimplePathStrategy;

        $r1 := @parameter0: android.net.Uri;

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getEncodedPath()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int,int)>(47, 1);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        $r4 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r4);

        $i0 = $i0 + 1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

        $r3 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r3);

        $r5 = $r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r7 = (java.io.File) $r6;

        if $r7 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find configured root for ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r8;

     label1:
        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r3);

     label2:
        $r10 = virtualinvoke $r10.<java.io.File: java.io.File getCanonicalFile()>();

     label3:
        $r4 = virtualinvoke $r10.<java.io.File: java.lang.String getPath()>();

        $r3 = virtualinvoke $r7.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 != 0 goto label5;

        $r11 = new java.lang.SecurityException;

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>("Resolved path jumped beyond configured root");

        throw $r11;

     label4:
        $r2 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve canonical path for ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r8;

     label5:
        return $r10;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public android.net.Uri getUriForFile(java.io.File)
    {
        android.support.v4.content.FileProvider$SimplePathStrategy $r0;
        java.io.File $r1;
        java.io.IOException $r2;
        java.lang.String $r3, $r10;
        java.util.Map$Entry $r4, $r9;
        java.util.HashMap $r5;
        java.util.Set $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r12;
        android.net.Uri$Builder $r13;
        android.net.Uri $r14;

        $r0 := @this: android.support.v4.content.FileProvider$SimplePathStrategy;

        $r1 := @parameter0: java.io.File;

     label1:
        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getCanonicalPath()>();

     label2:
        $r4 = null;

        $r5 = $r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.util.Map$Entry) $r8;

        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r1 = (java.io.File) $r8;

        $r10 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r10);

        if $z0 == 0 goto label3;

        if $r4 == null goto label4;

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        $r8 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r1 = (java.io.File) $r8;

        $r10 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label3;

     label4:
        $r4 = $r9;

        goto label3;

     label5:
        $r2 := @caughtexception;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve canonical path for ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r11;

     label6:
        if $r4 != null goto label7;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find configured root that contains ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r11;

     label7:
        $r8 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r1 = (java.io.File) $r8;

        $r10 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label9;

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

     label8:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r8 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r8;

        $r10 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r10);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r3 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>($r3, "/");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new android.net.Uri$Builder;

        specialinvoke $r13.<android.net.Uri$Builder: void <init>()>();

        $r13 = virtualinvoke $r13.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r10 = $r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.lang.String mAuthority>;

        $r13 = virtualinvoke $r13.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r10);

        $r13 = virtualinvoke $r13.<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>($r3);

        $r14 = virtualinvoke $r13.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r14;

     label9:
        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i0 = $i0 + 1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

        goto label8;

        catch java.io.IOException from label1 to label2 with label5;
    }
}
