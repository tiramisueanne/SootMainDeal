abstract class android.support.v7.internal.widget.AbsActionBarView extends android.view.ViewGroup
{
    private static final int FADE_DURATION;
    protected android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter;
    protected int mContentHeight;
    protected android.support.v7.internal.view.menu.ActionMenuView mMenuView;
    protected boolean mSplitActionBar;
    protected android.support.v7.internal.widget.ActionBarContainer mSplitView;
    protected boolean mSplitWhenNarrow;

    void <init>(android.content.Context)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.content.Context $r1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context)>($r1);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void animateToVisibility(int)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        int $i0, $i1;
        android.content.Context $r1;
        android.view.animation.Animation $r2;
        android.support.v7.internal.widget.ActionBarContainer $r3;
        android.support.v7.internal.view.menu.ActionMenuView $r4;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: void clearAnimation()>();

        $i1 = virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: int getVisibility()>();

        if $i0 == $i1 goto label3;

        $r1 = virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: android.content.Context getContext()>();

        if $i0 != 0 goto label2;

        $i1 = <android.support.v7.appcompat.R$anim: int abc_fade_in>;

     label1:
        $r2 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r1, $i1);

        virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: void startAnimation(android.view.animation.Animation)>($r2);

        virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: void setVisibility(int)>($i0);

        $r3 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.ActionBarContainer mSplitView>;

        if $r3 == null goto label3;

        $r4 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuView mMenuView>;

        if $r4 == null goto label3;

        $r4 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuView mMenuView>;

        virtualinvoke $r4.<android.support.v7.internal.view.menu.ActionMenuView: void startAnimation(android.view.animation.Animation)>($r2);

        $r4 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuView mMenuView>;

        virtualinvoke $r4.<android.support.v7.internal.view.menu.ActionMenuView: void setVisibility(int)>($i0);

        return;

     label2:
        $i1 = <android.support.v7.appcompat.R$anim: int abc_fade_out>;

        goto label1;

     label3:
        return;
    }

    public void dismissPopupMenus()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.support.v7.internal.view.menu.ActionMenuPresenter $r1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r1.<android.support.v7.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()>();

     label1:
        return;
    }

    public int getAnimatedVisibility()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        int $i0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $i0 = virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: int getVisibility()>();

        return $i0;
    }

    public int getContentHeight()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        int i0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        i0 = $r0.<android.support.v7.internal.widget.AbsActionBarView: int mContentHeight>;

        return i0;
    }

    public boolean hideOverflowMenu()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        boolean $z0;
        android.support.v7.internal.view.menu.ActionMenuPresenter $r1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r1.<android.support.v7.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        boolean $z0;
        android.support.v7.internal.view.menu.ActionMenuPresenter $r1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r1.<android.support.v7.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowReserved()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        boolean $z0;
        android.support.v7.internal.view.menu.ActionMenuPresenter $r1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r1.<android.support.v7.internal.view.menu.ActionMenuPresenter: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected int measureChildView(android.view.View, int, int, int)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 := @parameter0: android.view.View;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, -2147483648);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i3, $i0);

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i2 = $i2 - $i0;

        $i2 = $i2 - $i1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        return $i2;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.content.res.Configuration $r1;
        int[] $r2;
        int $i0;
        android.content.Context $r3;
        android.content.res.TypedArray $r4;
        boolean $z0;
        android.content.res.Resources $r5;
        android.support.v7.internal.view.menu.ActionMenuPresenter $r6;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 := @parameter0: android.content.res.Configuration;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 8 goto label1;

        specialinvoke $r0.<android.view.ViewGroup: void onConfigurationChanged(android.content.res.Configuration)>($r1);

     label1:
        $r3 = virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: android.content.Context getContext()>();

        $r2 = <android.support.v7.appcompat.R$styleable: int[] ActionBar>;

        $i0 = <android.support.v7.appcompat.R$attr: int actionBarStyle>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r2, $i0, 0);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getLayoutDimension(int,int)>(1, 0);

        virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: void setContentHeight(int)>($i0);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $z0 = $r0.<android.support.v7.internal.widget.AbsActionBarView: boolean mSplitWhenNarrow>;

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <android.support.v7.appcompat.R$bool: int abc_split_action_bar_is_narrow>;

        $z0 = virtualinvoke $r5.<android.content.res.Resources: boolean getBoolean(int)>($i0);

        virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: void setSplitActionBar(boolean)>($z0);

     label2:
        $r6 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter>;

        if $r6 == null goto label3;

        $r6 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r6.<android.support.v7.internal.view.menu.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>($r1);

     label3:
        return;
    }

    protected int positionChild(android.view.View, int, int, int)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i2 = $i2 - $i3;

        $i2 = $i2 / 2;

        $i1 = $i1 + $i2;

        $i2 = $i0 + $i4;

        $i3 = $i1 + $i3;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $i4;
    }

    protected int positionChildInverse(android.view.View, int, int, int)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i2 = $i2 - $i3;

        $i2 = $i2 / 2;

        $i1 = $i1 + $i2;

        $i2 = $i0 - $i4;

        $i3 = $i1 + $i3;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i2, $i1, $i0, $i3);

        return $i4;
    }

    public void postShowOverflowMenu()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.support.v7.internal.widget.AbsActionBarView$1 $r1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = new android.support.v7.internal.widget.AbsActionBarView$1;

        specialinvoke $r1.<android.support.v7.internal.widget.AbsActionBarView$1: void <init>(android.support.v7.internal.widget.AbsActionBarView)>($r0);

        virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void setContentHeight(int)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        int $i0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $i0 := @parameter0: int;

        $r0.<android.support.v7.internal.widget.AbsActionBarView: int mContentHeight> = $i0;

        virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: void requestLayout()>();

        return;
    }

    public void setSplitActionBar(boolean)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $z0 := @parameter0: boolean;

        $r0.<android.support.v7.internal.widget.AbsActionBarView: boolean mSplitActionBar> = $z0;

        return;
    }

    public void setSplitView(android.support.v7.internal.widget.ActionBarContainer)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.support.v7.internal.widget.ActionBarContainer $r1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 := @parameter0: android.support.v7.internal.widget.ActionBarContainer;

        $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.ActionBarContainer mSplitView> = $r1;

        return;
    }

    public void setSplitWhenNarrow(boolean)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $z0 := @parameter0: boolean;

        $r0.<android.support.v7.internal.widget.AbsActionBarView: boolean mSplitWhenNarrow> = $z0;

        return;
    }

    public void setVisibility(int)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        int $i0, $i1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: int getVisibility()>();

        if $i0 == $i1 goto label1;

        specialinvoke $r0.<android.view.ViewGroup: void setVisibility(int)>($i0);

     label1:
        return;
    }

    public boolean showOverflowMenu()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        boolean $z0;
        android.support.v7.internal.view.menu.ActionMenuPresenter $r1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r1.<android.support.v7.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()>();

        return $z0;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <android.support.v7.internal.widget.AbsActionBarView: int FADE_DURATION> = 200;

        return;
    }
}
