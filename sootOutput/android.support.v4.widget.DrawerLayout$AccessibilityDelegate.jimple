class android.support.v4.widget.DrawerLayout$AccessibilityDelegate extends android.support.v4.view.AccessibilityDelegateCompat
{
    private final android.graphics.Rect mTmpRect;
    final android.support.v4.widget.DrawerLayout this$0;

    void <init>(android.support.v4.widget.DrawerLayout)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.support.v4.widget.DrawerLayout $r1;
        android.graphics.Rect $r2;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.support.v4.widget.DrawerLayout;

        $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: android.support.v4.widget.DrawerLayout this$0> = $r1;

        specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: android.graphics.Rect mTmpRect> = $r2;

        return;
    }

    private void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat, android.view.ViewGroup)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r1;
        android.view.ViewGroup $r2;
        int $i0, $i1;
        android.view.View $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 := @parameter1: android.view.ViewGroup;

        $i0 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        $z0 = staticinvoke <android.support.v4.widget.DrawerLayout: boolean access$300(android.view.View)>($r3);

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r1, $r2;
        android.graphics.Rect $r3;
        boolean $z0;
        java.lang.CharSequence $r4;
        int $i0;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r3 = $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: android.graphics.Rect mTmpRect>;

        virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>($r3);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>($r3);

        virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)>($r3);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>($r3);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isVisibleToUser()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>($z0);

        $r4 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)>($r4);

        $r4 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r4);

        $r4 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)>($r4);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityFocused()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)>($z0);

        $z0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)>($z0);

        $i0 = virtualinvoke $r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getActions()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>($i0);

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.view.View $r1;
        android.view.accessibility.AccessibilityEvent $r2;
        int $i0;
        java.util.List $r3;
        android.support.v4.widget.DrawerLayout $r4;
        java.lang.CharSequence $r5;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        $i0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i0 != 32 goto label2;

        $r3 = virtualinvoke $r2.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r4 = $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: android.support.v4.widget.DrawerLayout this$0>;

        $r1 = staticinvoke <android.support.v4.widget.DrawerLayout: android.view.View access$200(android.support.v4.widget.DrawerLayout)>($r4);

        if $r1 == null goto label1;

        $r4 = $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: android.support.v4.widget.DrawerLayout this$0>;

        $i0 = virtualinvoke $r4.<android.support.v4.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>($r1);

        $r4 = $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: android.support.v4.widget.DrawerLayout this$0>;

        $r5 = virtualinvoke $r4.<android.support.v4.widget.DrawerLayout: java.lang.CharSequence getDrawerTitle(int)>($i0);

        if $r5 == null goto label1;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        return 1;

     label2:
        $z0 = specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($r1, $r2);

        return $z0;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.view.View $r1;
        android.view.accessibility.AccessibilityEvent $r2;
        java.lang.String $r3;
        java.lang.Class $r4;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($r1, $r2);

        $r4 = class "android/support/v4/widget/DrawerLayout";

        $r3 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r1, $r3;
        android.view.View $r2, $r7;
        java.lang.Class $r4;
        java.lang.String $r5;
        android.view.ViewParent $r6;
        boolean $z0;
        android.view.ViewGroup $r8;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r2 := @parameter0: android.view.View;

        $r1 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r3 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r1);

        specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r2, $r3);

        $r4 = class "android/support/v4/widget/DrawerLayout";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r5);

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)>($r2);

        $r6 = staticinvoke <android.support.v4.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)>($r2);

        $z0 = $r6 instanceof android.view.View;

        if $z0 == 0 goto label1;

        $r7 = (android.view.View) $r6;

        virtualinvoke $r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>($r7);

     label1:
        specialinvoke $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r1, $r3);

        virtualinvoke $r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void recycle()>();

        $r8 = (android.view.ViewGroup) $r2;

        specialinvoke $r0.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup)>($r1, $r8);

        return;
    }

    public boolean onRequestSendAccessibilityEvent(android.view.ViewGroup, android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r0;
        android.view.ViewGroup $r1;
        android.view.View $r2;
        android.view.accessibility.AccessibilityEvent $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.accessibility.AccessibilityEvent;

        $z0 = staticinvoke <android.support.v4.widget.DrawerLayout: boolean access$300(android.view.View)>($r2);

        if $z0 == 0 goto label1;

        $z0 = specialinvoke $r0.<android.support.v4.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>($r1, $r2, $r3);

        return $z0;

     label1:
        return 0;
    }
}
