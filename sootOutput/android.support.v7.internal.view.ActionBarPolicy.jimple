public class android.support.v7.internal.view.ActionBarPolicy extends java.lang.Object
{
    private android.content.Context mContext;

    private void <init>(android.content.Context)
    {
        android.support.v7.internal.view.ActionBarPolicy $r0;
        android.content.Context $r1;

        $r0 := @this: android.support.v7.internal.view.ActionBarPolicy;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.support.v7.internal.view.ActionBarPolicy: android.content.Context mContext> = $r1;

        return;
    }

    public static android.support.v7.internal.view.ActionBarPolicy get(android.content.Context)
    {
        android.content.Context $r0;
        android.support.v7.internal.view.ActionBarPolicy $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = new android.support.v7.internal.view.ActionBarPolicy;

        specialinvoke $r1.<android.support.v7.internal.view.ActionBarPolicy: void <init>(android.content.Context)>($r0);

        return $r1;
    }

    public boolean enableHomeButtonByDefault()
    {
        android.support.v7.internal.view.ActionBarPolicy $r0;
        android.content.pm.ApplicationInfo $r1;
        android.content.Context $r2;
        int $i0;

        $r0 := @this: android.support.v7.internal.view.ActionBarPolicy;

        $r2 = $r0.<android.support.v7.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r1 = virtualinvoke $r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 14 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int getEmbeddedMenuWidthLimit()
    {
        android.support.v7.internal.view.ActionBarPolicy $r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        int $i0;

        $r0 := @this: android.support.v7.internal.view.ActionBarPolicy;

        $r1 = $r0.<android.support.v7.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r3.<android.util.DisplayMetrics: int widthPixels>;

        $i0 = $i0 / 2;

        return $i0;
    }

    public int getMaxActionButtons()
    {
        android.support.v7.internal.view.ActionBarPolicy $r0;
        int $i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;

        $r0 := @this: android.support.v7.internal.view.ActionBarPolicy;

        $r1 = $r0.<android.support.v7.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <android.support.v7.appcompat.R$integer: int abc_max_action_buttons>;

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>($i0);

        return $i0;
    }

    public int getStackedTabMaxWidth()
    {
        android.support.v7.internal.view.ActionBarPolicy $r0;
        int $i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;

        $r0 := @this: android.support.v7.internal.view.ActionBarPolicy;

        $r1 = $r0.<android.support.v7.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <android.support.v7.appcompat.R$dimen: int abc_action_bar_stacked_tab_max_width>;

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        return $i0;
    }

    public int getTabContainerHeight()
    {
        android.support.v7.internal.view.ActionBarPolicy $r0;
        int[] $r1;
        int $i0, $i1;
        android.content.Context $r2;
        android.content.res.TypedArray $r3;
        android.content.res.Resources $r4;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.view.ActionBarPolicy;

        $r2 = $r0.<android.support.v7.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r1 = <android.support.v7.appcompat.R$styleable: int[] ActionBar>;

        $i0 = <android.support.v7.appcompat.R$attr: int actionBarStyle>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r1, $i0, 0);

        $i0 = virtualinvoke $r3.<android.content.res.TypedArray: int getLayoutDimension(int,int)>(1, 0);

        $i1 = $i0;

        $r2 = $r0.<android.support.v7.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r0.<android.support.v7.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        if $z0 != 0 goto label1;

        $i1 = <android.support.v7.appcompat.R$dimen: int abc_action_bar_stacked_max_height>;

        $i1 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

     label1:
        virtualinvoke $r3.<android.content.res.TypedArray: void recycle()>();

        return $i1;
    }

    public boolean hasEmbeddedTabs()
    {
        android.support.v7.internal.view.ActionBarPolicy $r0;
        int $i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.view.ActionBarPolicy;

        $r1 = $r0.<android.support.v7.internal.view.ActionBarPolicy: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <android.support.v7.appcompat.R$bool: int abc_action_bar_embed_tabs_pre_jb>;

        $z0 = virtualinvoke $r2.<android.content.res.Resources: boolean getBoolean(int)>($i0);

        return $z0;
    }

    public boolean showsOverflowMenuButton()
    {
        android.support.v7.internal.view.ActionBarPolicy $r0;
        int $i0;

        $r0 := @this: android.support.v7.internal.view.ActionBarPolicy;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        return 1;

     label1:
        return 0;
    }
}
