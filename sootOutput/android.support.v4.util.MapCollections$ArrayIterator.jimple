final class android.support.v4.util.MapCollections$ArrayIterator extends java.lang.Object implements java.util.Iterator
{
    boolean mCanRemove;
    int mIndex;
    final int mOffset;
    int mSize;
    final android.support.v4.util.MapCollections this$0;

    void <init>(android.support.v4.util.MapCollections, int)
    {
        android.support.v4.util.MapCollections$ArrayIterator $r0;
        android.support.v4.util.MapCollections $r1;
        int $i0;

        $r0 := @this: android.support.v4.util.MapCollections$ArrayIterator;

        $r1 := @parameter0: android.support.v4.util.MapCollections;

        $i0 := @parameter1: int;

        $r0.<android.support.v4.util.MapCollections$ArrayIterator: android.support.v4.util.MapCollections this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.support.v4.util.MapCollections$ArrayIterator: boolean mCanRemove> = 0;

        $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mOffset> = $i0;

        $i0 = virtualinvoke $r1.<android.support.v4.util.MapCollections: int colGetSize()>();

        $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mSize> = $i0;

        return;
    }

    public boolean hasNext()
    {
        android.support.v4.util.MapCollections$ArrayIterator $r0;
        int $i0, $i1;

        $r0 := @this: android.support.v4.util.MapCollections$ArrayIterator;

        $i1 = $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mIndex>;

        $i0 = $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mSize>;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object next()
    {
        android.support.v4.util.MapCollections$ArrayIterator $r0;
        int $i0, $i1;
        java.lang.Object $r1;
        android.support.v4.util.MapCollections $r2;

        $r0 := @this: android.support.v4.util.MapCollections$ArrayIterator;

        $r2 = $r0.<android.support.v4.util.MapCollections$ArrayIterator: android.support.v4.util.MapCollections this$0>;

        $i0 = $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mIndex>;

        $i1 = $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mOffset>;

        $r1 = virtualinvoke $r2.<android.support.v4.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, $i1);

        $i0 = $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mIndex>;

        $i0 = $i0 + 1;

        $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mIndex> = $i0;

        $r0.<android.support.v4.util.MapCollections$ArrayIterator: boolean mCanRemove> = 1;

        return $r1;
    }

    public void remove()
    {
        android.support.v4.util.MapCollections$ArrayIterator $r0;
        int $i0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.support.v4.util.MapCollections $r2;

        $r0 := @this: android.support.v4.util.MapCollections$ArrayIterator;

        $z0 = $r0.<android.support.v4.util.MapCollections$ArrayIterator: boolean mCanRemove>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        $i0 = $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mIndex>;

        $i0 = $i0 + -1;

        $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mIndex> = $i0;

        $i0 = $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mSize>;

        $i0 = $i0 + -1;

        $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mSize> = $i0;

        $r0.<android.support.v4.util.MapCollections$ArrayIterator: boolean mCanRemove> = 0;

        $r2 = $r0.<android.support.v4.util.MapCollections$ArrayIterator: android.support.v4.util.MapCollections this$0>;

        $i0 = $r0.<android.support.v4.util.MapCollections$ArrayIterator: int mIndex>;

        virtualinvoke $r2.<android.support.v4.util.MapCollections: void colRemoveAt(int)>($i0);

        return;
    }
}
