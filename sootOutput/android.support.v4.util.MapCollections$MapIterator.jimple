final class android.support.v4.util.MapCollections$MapIterator extends java.lang.Object implements java.util.Iterator, java.util.Map$Entry
{
    int mEnd;
    boolean mEntryValid;
    int mIndex;
    final android.support.v4.util.MapCollections this$0;

    void <init>(android.support.v4.util.MapCollections)
    {
        android.support.v4.util.MapCollections$MapIterator $r0;
        android.support.v4.util.MapCollections $r1;
        int $i0;

        $r0 := @this: android.support.v4.util.MapCollections$MapIterator;

        $r1 := @parameter0: android.support.v4.util.MapCollections;

        $r0.<android.support.v4.util.MapCollections$MapIterator: android.support.v4.util.MapCollections this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.support.v4.util.MapCollections$MapIterator: boolean mEntryValid> = 0;

        $i0 = virtualinvoke $r1.<android.support.v4.util.MapCollections: int colGetSize()>();

        $i0 = $i0 + -1;

        $r0.<android.support.v4.util.MapCollections$MapIterator: int mEnd> = $i0;

        $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex> = -1;

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        android.support.v4.util.MapCollections$MapIterator $r0;
        java.lang.Object $r1, $r5;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r2;
        java.util.Map$Entry $r3;
        android.support.v4.util.MapCollections $r4;
        int $i0;

        $r0 := @this: android.support.v4.util.MapCollections$MapIterator;

        $r1 := @parameter0: java.lang.Object;

        $z0 = 1;

        $z1 = $r0.<android.support.v4.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z1 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r2;

     label1:
        $z1 = $r1 instanceof java.util.Map$Entry;

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r3 = (java.util.Map$Entry) $r1;

        $r1 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = $r0.<android.support.v4.util.MapCollections$MapIterator: android.support.v4.util.MapCollections this$0>;

        $i0 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex>;

        $r5 = virtualinvoke $r4.<android.support.v4.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, 0);

        $z1 = staticinvoke <android.support.v4.util.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)>($r1, $r5);

        if $z1 == 0 goto label4;

        $r1 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = $r0.<android.support.v4.util.MapCollections$MapIterator: android.support.v4.util.MapCollections this$0>;

        $i0 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex>;

        $r5 = virtualinvoke $r4.<android.support.v4.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, 1);

        $z1 = staticinvoke <android.support.v4.util.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)>($r1, $r5);

        if $z1 == 0 goto label4;

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label3;
    }

    public java.lang.Object getKey()
    {
        android.support.v4.util.MapCollections$MapIterator $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        android.support.v4.util.MapCollections $r3;
        int $i0;

        $r0 := @this: android.support.v4.util.MapCollections$MapIterator;

        $z0 = $r0.<android.support.v4.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r2;

     label1:
        $r3 = $r0.<android.support.v4.util.MapCollections$MapIterator: android.support.v4.util.MapCollections this$0>;

        $i0 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex>;

        $r1 = virtualinvoke $r3.<android.support.v4.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, 0);

        return $r1;
    }

    public java.lang.Object getValue()
    {
        android.support.v4.util.MapCollections$MapIterator $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        android.support.v4.util.MapCollections $r3;
        int $i0;

        $r0 := @this: android.support.v4.util.MapCollections$MapIterator;

        $z0 = $r0.<android.support.v4.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r2;

     label1:
        $r3 = $r0.<android.support.v4.util.MapCollections$MapIterator: android.support.v4.util.MapCollections this$0>;

        $i0 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex>;

        $r1 = virtualinvoke $r3.<android.support.v4.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, 1);

        return $r1;
    }

    public boolean hasNext()
    {
        android.support.v4.util.MapCollections$MapIterator $r0;
        int $i0, $i1;

        $r0 := @this: android.support.v4.util.MapCollections$MapIterator;

        $i1 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex>;

        $i0 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mEnd>;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final int hashCode()
    {
        android.support.v4.util.MapCollections$MapIterator $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.support.v4.util.MapCollections $r2;
        java.lang.Object $r3, $r4;

        $r0 := @this: android.support.v4.util.MapCollections$MapIterator;

        $i0 = 0;

        $z0 = $r0.<android.support.v4.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r1;

     label1:
        $r2 = $r0.<android.support.v4.util.MapCollections$MapIterator: android.support.v4.util.MapCollections this$0>;

        $i1 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex>;

        $r3 = virtualinvoke $r2.<android.support.v4.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i1, 0);

        $r2 = $r0.<android.support.v4.util.MapCollections$MapIterator: android.support.v4.util.MapCollections this$0>;

        $i1 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex>;

        $r4 = virtualinvoke $r2.<android.support.v4.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i1, 1);

        if $r3 != null goto label4;

        $i1 = 0;

     label2:
        if $r4 != null goto label5;

     label3:
        $i0 = $i0 ^ $i1;

        return $i0;

     label4:
        $i1 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        goto label2;

     label5:
        $i0 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        goto label3;
    }

    public volatile java.lang.Object next()
    {
        android.support.v4.util.MapCollections$MapIterator $r0;
        java.util.Map$Entry $r1;

        $r0 := @this: android.support.v4.util.MapCollections$MapIterator;

        $r1 = virtualinvoke $r0.<android.support.v4.util.MapCollections$MapIterator: java.util.Map$Entry next()>();

        return $r1;
    }

    public java.util.Map$Entry next()
    {
        android.support.v4.util.MapCollections$MapIterator $r0;
        int $i0;

        $r0 := @this: android.support.v4.util.MapCollections$MapIterator;

        $i0 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex>;

        $i0 = $i0 + 1;

        $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex> = $i0;

        $r0.<android.support.v4.util.MapCollections$MapIterator: boolean mEntryValid> = 1;

        return $r0;
    }

    public void remove()
    {
        android.support.v4.util.MapCollections$MapIterator $r0;
        int $i0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.support.v4.util.MapCollections $r2;

        $r0 := @this: android.support.v4.util.MapCollections$MapIterator;

        $z0 = $r0.<android.support.v4.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        $r2 = $r0.<android.support.v4.util.MapCollections$MapIterator: android.support.v4.util.MapCollections this$0>;

        $i0 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex>;

        virtualinvoke $r2.<android.support.v4.util.MapCollections: void colRemoveAt(int)>($i0);

        $i0 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex>;

        $i0 = $i0 + -1;

        $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex> = $i0;

        $i0 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mEnd>;

        $i0 = $i0 + -1;

        $r0.<android.support.v4.util.MapCollections$MapIterator: int mEnd> = $i0;

        $r0.<android.support.v4.util.MapCollections$MapIterator: boolean mEntryValid> = 0;

        return;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        android.support.v4.util.MapCollections$MapIterator $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        android.support.v4.util.MapCollections $r3;
        int $i0;

        $r0 := @this: android.support.v4.util.MapCollections$MapIterator;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r0.<android.support.v4.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r2;

     label1:
        $r3 = $r0.<android.support.v4.util.MapCollections$MapIterator: android.support.v4.util.MapCollections this$0>;

        $i0 = $r0.<android.support.v4.util.MapCollections$MapIterator: int mIndex>;

        $r1 = virtualinvoke $r3.<android.support.v4.util.MapCollections: java.lang.Object colSetValue(int,java.lang.Object)>($i0, $r1);

        return $r1;
    }

    public final java.lang.String toString()
    {
        android.support.v4.util.MapCollections$MapIterator $r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @this: android.support.v4.util.MapCollections$MapIterator;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<android.support.v4.util.MapCollections$MapIterator: java.lang.Object getKey()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r2 = virtualinvoke $r0.<android.support.v4.util.MapCollections$MapIterator: java.lang.Object getValue()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
